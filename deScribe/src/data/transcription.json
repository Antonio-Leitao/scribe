{
  "href": "/",
  "type": "folder",
  "children": [
    {
      "href": "/submodule",
      "type": "folder",
      "children": [
        {
          "NAME": "classes_and_funcs",
          "DOC": {
            "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Docstring for the example.py module.</p></div>,<p>Modules names should have short, all-lowercase names.  The module name may\nhave underscores if this improves readability.</p></div>"
          },
          "type": "module",
          "href": "/submodule/classes_and_funcs",
          "path": "example_dir.submodule.classes_and_funcs",
          "children": [
            {
              "NAME": "UMAP",
              "SIGNATURE": "(n_clusters=8)",
              "DOC": {
                "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
                "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
                "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
                "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
                "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
                "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
                "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
                "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     O. McNoleg, \"The integration of GIS, remote sensing,\nexpert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n    </td>\n   </tr>\n  </tbody>\n </table>\n</div>\n",
                "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
              },
              "type": "class",
              "href": "/submodule/classes_and_funcs/UMAP",
              "path": "example_dir.submodule.classes_and_funcs.UMAP",
              "METHODS": [
                {
                  "NAME": "fit",
                  "SIGNATURE": "(self, X, y=None, sample_weight=None)",
                  "DOC": {
                    "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
                    "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
                    "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
                    "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
                    "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
                    "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
                    "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
                    "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     <ol class=\"first last upperalpha simple\" start=\"15\">\n      <li>\n       McNoleg, \"The integration of GIS, remote sensing,\n      </li>\n     </ol>\n    </td>\n   </tr>\n  </tbody>\n </table>\n <p>\n  expert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n </p>\n</div>\n",
                    "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
                  }
                }
              ]
            }
          ]
        },
        {
          "NAME": "bigclass",
          "DOC": {
            "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Docstring for the example.py module.</p></div>,<p>Modules names should have short, all-lowercase names.  The module name may\nhave underscores if this improves readability.</p></div>"
          },
          "type": "module",
          "href": "/submodule/bigclass",
          "path": "example_dir.submodule.bigclass",
          "children": [
            {
              "NAME": "BigClass",
              "SIGNATURE": "(n_clusters=8)",
              "DOC": {
                "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
                "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
                "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
                "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
                "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
                "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
                "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
                "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     O. McNoleg, \"The integration of GIS, remote sensing,\nexpert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n    </td>\n   </tr>\n  </tbody>\n </table>\n</div>\n",
                "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
              },
              "type": "class",
              "href": "/submodule/bigclass/BigClass",
              "path": "example_dir.submodule.bigclass.BigClass",
              "METHODS": [
                {
                  "NAME": "fit",
                  "SIGNATURE": "(self, X, y=None, sample_weight=None)",
                  "DOC": {
                    "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
                    "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
                    "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
                    "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
                    "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
                    "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
                    "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
                    "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     <ol class=\"first last upperalpha simple\" start=\"15\">\n      <li>\n       McNoleg, \"The integration of GIS, remote sensing,\n      </li>\n     </ol>\n    </td>\n   </tr>\n  </tbody>\n </table>\n <p>\n  expert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n </p>\n</div>\n",
                    "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "NAME": "utils_module",
      "DOC": {
        "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Docstring for the example.py module.</p></div>,<p>Modules names should have short, all-lowercase names.  The module name may\nhave underscores if this improves readability.</p></div>"
      },
      "type": "module",
      "href": "/utils_module",
      "path": "example_dir.utils_module",
      "children": [
        {
          "NAME": "bar",
          "SIGNATURE": "(var1, var2, *args, long_var_name='hi', only_seldom_used_keyword=0, **kwargs)",
          "DOC": {
            "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
            "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
            "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
            "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
            "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
            "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
            "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
            "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     O. McNoleg, \"The integration of GIS, remote sensing,\nexpert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n    </td>\n   </tr>\n  </tbody>\n </table>\n</div>\n",
            "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
          },
          "type": "function",
          "href": "/utils_module/routines",
          "path": "example_dir.utils_module.bar"
        },
        {
          "NAME": "foo",
          "SIGNATURE": "(var1, var2, *args, long_var_name='hi', only_seldom_used_keyword=0, **kwargs)",
          "DOC": {
            "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
            "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
            "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
            "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
            "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
            "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
            "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
            "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     O. McNoleg, \"The integration of GIS, remote sensing,\nexpert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n    </td>\n   </tr>\n  </tbody>\n </table>\n</div>\n",
            "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
          },
          "type": "function",
          "href": "/utils_module/routines",
          "path": "example_dir.utils_module.foo"
        }
      ]
    },
    {
      "NAME": "module_many_classes",
      "DOC": {
        "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Docstring for the example.py module.</p></div>,<p>Modules names should have short, all-lowercase names.  The module name may\nhave underscores if this improves readability.</p></div>"
      },
      "type": "module",
      "href": "/module_many_classes",
      "path": "example_dir.module_many_classes",
      "children": [
        {
          "NAME": "DBScan",
          "SIGNATURE": "(n_clusters=8)",
          "DOC": {
            "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
            "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
            "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
            "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
            "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
            "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
            "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
            "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     O. McNoleg, \"The integration of GIS, remote sensing,\nexpert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n    </td>\n   </tr>\n  </tbody>\n </table>\n</div>\n",
            "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
          },
          "type": "class",
          "href": "/module_many_classes/DBScan",
          "path": "example_dir.module_many_classes.DBScan",
          "METHODS": [
            {
              "NAME": "fit",
              "SIGNATURE": "(self, X, y=None, sample_weight=None)",
              "DOC": {
                "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
                "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
                "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
                "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
                "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
                "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
                "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
                "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     <ol class=\"first last upperalpha simple\" start=\"15\">\n      <li>\n       McNoleg, \"The integration of GIS, remote sensing,\n      </li>\n     </ol>\n    </td>\n   </tr>\n  </tbody>\n </table>\n <p>\n  expert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n </p>\n</div>\n",
                "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
              }
            }
          ]
        },
        {
          "NAME": "KMeans",
          "SIGNATURE": "(n_clusters=8)",
          "DOC": {
            "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
            "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
            "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
            "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
            "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
            "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
            "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
            "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     O. McNoleg, \"The integration of GIS, remote sensing,\nexpert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n    </td>\n   </tr>\n  </tbody>\n </table>\n</div>\n",
            "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
          },
          "type": "class",
          "href": "/module_many_classes/KMeans",
          "path": "example_dir.module_many_classes.KMeans",
          "METHODS": [
            {
              "NAME": "fit",
              "SIGNATURE": "(self, X, y=None, sample_weight=None)",
              "DOC": {
                "description": "<div class=\"section\" id=\"description\"><div class=\"synopse\"><p>Summarize the function in one line.</p></div>,<p>Several sentences providing an extended description. Refer to\nvariables using back-ticks, e.g. <cite>var</cite>.</p></div>",
                "parameters": "<div class=\"section\" id=\"parameters\">\n <h1>\n  Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   var1\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    array_like\n   </span>\n  </dt>\n  <dd>\n   Array_like means all those objects -- lists, nested lists, etc. --\nthat can be converted to an array.  We can also refer to\nvariables like\n   <cite>\n    var1\n   </cite>\n   .\n  </dd>\n  <dt>\n   var2\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int\n   </span>\n  </dt>\n  <dd>\n   The type above can either refer to an actual Python type\n(e.g.\n   <tt class=\"docutils literal\">\n    int\n   </tt>\n   ), or describe the type of the variable in more\ndetail, e.g.\n   <tt class=\"docutils literal\">\n    (N,) ndarray\n   </tt>\n   or\n   <tt class=\"docutils literal\">\n    array_like\n   </tt>\n   .\n  </dd>\n  <dt>\n   *args\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    iterable\n   </span>\n  </dt>\n  <dd>\n   Other arguments.\n  </dd>\n  <dt>\n   long_var_name\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    {'hi', 'ho'}, optional\n   </span>\n  </dt>\n  <dd>\n   Choices in brackets, default first when optional.\n  </dd>\n </dl>\n</div>\n",
                "returns": "<div class=\"section\" id=\"returns\">\n <h1>\n  Returns\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   type\n  </dt>\n  <dd>\n   Explanation of anonymous return value of type\n   <tt class=\"docutils literal\">\n    type\n   </tt>\n   .\n  </dd>\n  <dt>\n   describe\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of return value named\n   <cite>\n    describe\n   </cite>\n   .\n  </dd>\n  <dt>\n   out\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    type\n   </span>\n  </dt>\n  <dd>\n   Explanation of\n   <cite>\n    out\n   </cite>\n   .\n  </dd>\n </dl>\n <p>\n  type_without_description\n </p>\n</div>\n",
                "other-parameters": "<div class=\"section\" id=\"other-parameters\">\n <h1>\n  Other Parameters\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   only_seldom_used_keyword\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    int, optional\n   </span>\n  </dt>\n  <dd>\n   Infrequently used parameters can be described under this optional\nsection to prevent cluttering the Parameters section.\n  </dd>\n  <dt>\n   **kwargs\n   <span class=\"classifier-delimiter\">\n    :\n   </span>\n   <span class=\"classifier\">\n    dict\n   </span>\n  </dt>\n  <dd>\n   Other infrequently used keyword arguments. Note that all keyword\narguments appearing after the first parameter specified under the\nOther Parameters section, should also be described under this\nsection.\n  </dd>\n </dl>\n</div>\n",
                "raises": "<div class=\"section\" id=\"raises\">\n <h1>\n  Raises\n </h1>\n <dl class=\"docutils\">\n  <dt>\n   BadException\n  </dt>\n  <dd>\n   Because you shouldn't have done that.\n  </dd>\n </dl>\n</div>\n",
                "see-also": "<div class=\"section\" id=\"see-also\">\n <h1>\n  See Also\n </h1>\n <p>\n  numpy.array : Relationship (optional).\nnumpy.ndarray : Relationship (optional), which could be fairly long, in\n </p>\n <blockquote>\n  which case the line wraps here.\n </blockquote>\n <p>\n  numpy.dot, numpy.linalg.norm, numpy.eye\n </p>\n</div>\n",
                "notes": "<div class=\"section\" id=\"notes\">\n <h1>\n  Notes\n </h1>\n <p>\n  Notes about the implementation algorithm (if needed).\n </p>\n <p>\n  This can have multiple paragraphs.\n </p>\n <p>\n  You may include some math:\n </p>\n <div class=\"formula\">\n  <i>\n   X\n  </i>\n  (\n  <i>\n   e\n  </i>\n  <sup>\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n  </sup>\n  )&thinsp;=&thinsp;\n  <i>\n   x\n  </i>\n  (\n  <i>\n   n\n  </i>\n  )\n  <i>\n   e\n  </i>\n  <sup>\n   &thinsp;&minus;&thinsp;\n   <i>\n    j\n   </i>\n   <i>\n    &omega;\n   </i>\n   <i>\n    n\n   </i>\n  </sup>\n </div>\n <p>\n  And even use a Greek symbol like\n  <span class=\"formula\">\n   <i>\n    &omega;\n   </i>\n  </span>\n  inline.\n </p>\n</div>\n",
                "references": "<div class=\"section\" id=\"references\">\n <h1>\n  References\n </h1>\n <p>\n  Cite the relevant literature, e.g.\n  <a class=\"footnote-reference\" href=\"#footnote-1\" id=\"footnote-reference-1\">\n   [1]\n  </a>\n  .  You may also cite these\nreferences in the notes section above.\n </p>\n <table class=\"docutils footnote\" frame=\"void\" id=\"footnote-1\" rules=\"none\">\n  <colgroup>\n   <col class=\"label\"/>\n   <col/>\n  </colgroup>\n  <tbody valign=\"top\">\n   <tr>\n    <td class=\"label\">\n     <a class=\"fn-backref\" href=\"#footnote-reference-1\">\n      [1]\n     </a>\n    </td>\n    <td>\n     <ol class=\"first last upperalpha simple\" start=\"15\">\n      <li>\n       McNoleg, \"The integration of GIS, remote sensing,\n      </li>\n     </ol>\n    </td>\n   </tr>\n  </tbody>\n </table>\n <p>\n  expert systems and adaptive co-kriging for environmental habitat\nmodelling of the Highland Haggis using object-oriented, fuzzy-logic\nand neural-network techniques,\" Computers &amp; Geosciences, vol. 22,\npp. 585-588, 1996.\n </p>\n</div>\n",
                "examples": "<div class=\"section\" id=\"examples\">\n <h1>\n  Examples\n </h1>\n <p>\n  These are written in doctest format, and should illustrate how to\nuse the function.\n </p>\n <pre class=\"doctest-block\">\n&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; print([x + 3 for x in a])\n[4, 5, 6]\n&gt;&gt;&gt; print(\"a\\nb\")\na\nb\n</pre>\n</div>\n"
              }
            }
          ]
        }
      ]
    }
  ]
}
